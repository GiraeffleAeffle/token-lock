name: Deploy

on:
  push:
    branches: [master]
    tags: [v*]

  release:
    types: [published]

jobs:
  deploy:
    name: Deployment
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./packages/app

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Cache yarn cache
        uses: actions/cache@v2
        id: cache-yarn-cache
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install

      - name: Build website
        run: yarn static

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      # Script to deploy to the dev environment
      - name: 'Deploy to S3: Dev'
        if: github.ref == 'refs/heads/master'
        run: aws s3 sync out s3://${{ secrets.AWS_DEV_BUCKET_NAME }}/current --delete

      # Script to upload release files
      - name: 'Upload release build files for production'
        if: startsWith(github.ref, 'refs/tags/v')
        run: aws s3 sync out s3://${{ env.AWS_DEV_BUCKET_NAME }}/releases/${{ github.event.release.tag_name }} --delete

      # Script to prepare production deployments
      - run: bash ./.github/scripts/prepare_production_deployment.sh
        if: success() && startsWith(github.ref, 'refs/tags/v')
        env:
          PROD_DEPLOYMENT_HOOK_TOKEN: ${{ secrets.PROD_DEPLOYMENT_HOOK_TOKEN }}
          PROD_DEPLOYMENT_HOOK_URL: ${{ secrets.PROD_DEPLOYMENT_HOOK_URL }}
          VERSION_TAG: ${{ github.event.release.tag_name }}
